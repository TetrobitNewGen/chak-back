#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ words –≤ MongoDB
"""

import json
from pymongo import MongoClient
import os
import glob
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def add_words_from_json():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ words –≤ MongoDB"""
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ .env
    MONGODB_URI = os.getenv('MONGODB_URI', 'mongodb://localhost:27017/')
    DATABASE_NAME = os.getenv('DATABASE_NAME', 'tatar_learning')
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
        client = MongoClient(MONGODB_URI)
        db = client[DATABASE_NAME]
        words_collection = db['words']
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö JSON —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ words
        json_files = glob.glob('words/*.json')
        
        if not json_files:
            print('‚ùå –í –ø–∞–ø–∫–µ words –Ω–µ –Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤')
            return False
        
        all_documents = []
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ JSON —Ñ–∞–π–ª–∞
        for json_file in json_files:
            print(f'üìñ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {json_file}')
            
            try:
                # –ß—Ç–µ–Ω–∏–µ JSON-—Ñ–∞–π–ª–∞
                with open(json_file, 'r', encoding='utf-8') as file:
                    data = json.load(file)
                
                # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
                for word, definitions in data.items():
                    all_documents.append({
                        'word': word,
                        'definitions': definitions,
                        'difficulty': determine_difficulty(definitions),
                        'source_file': os.path.basename(json_file)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞-–∏—Å—Ç–æ—á–Ω–∏–∫–∞
                    })
                
                print(f'‚úÖ –§–∞–π–ª {json_file} –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ')
                
            except Exception as e:
                print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {json_file}: {e}')
                continue
        
        # –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        words_collection.delete_many({})
        
        # –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ MongoDB
        if all_documents:
            result = words_collection.insert_many(all_documents)
            print(f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(result.inserted_ids)} —Å–ª–æ–≤ –∏–∑ {len(json_files)} —Ñ–∞–π–ª–æ–≤')
            return True
        else:
            print('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.')
            return False
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ª–æ–≤: {e}')
        return False
    finally:
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if 'client' in locals():
            client.close()

def determine_difficulty(definitions):
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–ª–æ–≤–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π"""
    if not definitions:
        return 'easy'
    
    definition_text = ' '.join(definitions).lower()
    
    if any(keyword in definition_text for keyword in ['—Ä–∞–∑–≥', '–ø—Ä–æ—Å—Ç', '–º–µ–∂–¥', '—á–∞—Å—Ç']):
        return 'easy'
    elif any(keyword in definition_text for keyword in ['—Å—É—â', '–≥–ª', '–ø—Ä–∏–ª', '–Ω–∞—Ä–µ—á']):
        return 'medium'
    else:
        return 'hard'

if __name__ == "__main__":
    print("=== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤ –≤ MongoDB ===")
    success = add_words_from_json()
    exit(0 if success else 1)